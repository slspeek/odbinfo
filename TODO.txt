About UI with credits to BaseDocumenter, gohugo, graphviz

Testing
-------
Replace test that test nothing, by meaningfull unit tests
unit test coverage 90% (now 85.98%)

test/pure/test_sql_parser.py
test/pure/test_writer_make_site.py
test/pure/test_processor.py
test/pure/test_basic_parser_slow.py
test/pure/test_writer_regression.py
test/pure/test_scanner.py
test/pure/test_basic_parser.py

better description of the extension

Pre release
-----------
Try on windows

update minimal theme (20210703 ok)

make upgrade dependencies (20220220 done)

#################################################################################
############################## release 0.1 ######################################
#################################################################################
text documents should be off by default

edit config function, and menu item
copyright in config

See if Pydantic dict can simplify the Dictable bussiness
model.dict(exclude=(,)) ||
make to_dict a visitor

look critical at token rendering &&
look at Identifier construction at dependency.py:85
- just use obj_id

svg stylesheet, class for graph

Configuration
-------------
Split out config properties collapse_multiple_uses

split in instance and global conf
only global is written and read
start with config.xcs, config.xcu and programmatically write and read them
first only the location of ymal configuration
configuration location variable in generate_report
configuration reader so types in config.yml can be removed
See BaseDocumenter config too

GUI
---
- Settings dialog (Options)
- Progress dialog

Relevant function filter
- function that is used by something else than a basicfunction
- function that uses something else than a basicfunction
- everthing 'in between' the above (hard to determine)

SubForm reading should respect order of subforms and controls
FormItem = Union[SubForm, Control, ListBox, Grid]
Grid type hack?

type file based MetaData, TextDocument
- functionality to include the file with downloadable link (if configurated so)
(nice versioning tool)

database (driver) information retrieval

database author info

Document the technical design:
- reading stage
- preprocessing
- dependency search
- graphs generation
- writing
- building

test_basic_parser_slow.py: parametrize and regression
make e2e test (BaseDocumenter2dot example)
a test for _convert_local, verify there are no more
localhost:1313 references

dependencysearch should be called from core not processor?

Introduce <ContentType>Raw classes make them member of <ContentType> classes
as they are preprocessed

Demonstration database Herbarium
- Species, Genus, Family, Order, Class, Phylum, Kingdom, Domain,
  Attributes, Observations, Locations
  Edibility (pfaf.org)
  Macros that open browser on interesting Plant sites

Generate graph legend

Extra graphs: (and link all these graphs)
  - for table, queries, Views
  - for basicfunction, library, module
  - WebPage object with direct uses and used_bies, and all_objects (respecting excludes)
bypass wget --convert-links with a rewrite in python of public/
- level 0 strip leading /
- level 1 strip leading /, add ../
- level 2 strip leading /, add ../../

Use LibYAML with pyyaml (on linux?)
caching of query parsing
- https://docs.python.org/3.7/library/shelve.html

direct sql queries must be transformed to Query object
Threads: writer, parser? Not possible, only threads by hand, no concurrent.pool nor asyncio
i18n gettext in python, hugo {{ T id }}
make typing more complete (lot of work)
errors in parser need improvement
Clean up files after make_site if no config.keepfiles is specified
field are done last as they are nice to have
datafield-referer class as super for Control, QueryColumn, DatabaseDisplay (Report field)
python in python (nice to have)
others in python (nice to have)

templates:
- look into GoHugo submenus
- Form: controls linked to sun API docs. And ServiceNames in BasicFunctions
templates:
- control in graph
- column in graph
- sql color highlighting
  - columnnames

?make it work for .oxt files too?

Limitations
-----------
Dialogs, Toolbars, Toolbarcontrols are omitted
Macro recursive calls are not considered
Controls more specific, eg Button...
IsCurrency Column omitted
Catalog excluded
KeyColumns, IndexColumns not used fully

Decided not to
--------------
remove Start button from UI (Will no be done, as plan is to provide output-dir file field in the logging UI)

Consider making a recursive call down the children with the containing webpage, setting it in a field of Node
(then remove all the parent stuff) NO! Because parent is used in the graph extensively

all_objects, by_content_type --> Iterator
search_combinations makes lists first

graph: look at strict parameter of Digraph for collapse_multiple_uses configuration
parameter

- _convert_local should use python webserver: (hugo localserving is very convenient)
  https://docs.python.org/3.7/library/http.server.html
    -serve_forever
    -shutdown --> .socket.close()

Shall I use native python ui? Easer to run (test) and write and logging window (below) will work.
Position of the windows may be weird. CANNOT BE DONE (https://bz.apache.org/ooo/show_bug.cgi?id=30349)











